MATRIX_DIVIDED TESTFILE BY PHOENIX
============== START ===============

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

case of all integer list of list and div as int:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

case of float and int values in list:
>>> matrix = [[0, 10.15, 2], [3, 4.67, 5]]
>>> matrix_divided(matrix, 2)
[[0.0, 5.08, 1.0], [1.5, 2.33, 2.5]]

case of string in list:
>>> matrix = [[0, 10.15, 2], ["hello", 4.67, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case of tuple in list:
>>> matrix = [[0, (2, 5), 2], [3, 4.67, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case of dictionaries in list:
>>> matrix = [[0, 1, 2], [3, {2, 4}, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case of boolean in list:
>>> matrix = [[0, True, 2], [3, 4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

case of uneven rows of the matrix:
>>> matrix = [[0, 3, 1], [3, 4, 6, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

case of div as float:
>>> matrix = [[0, 3, 1], [3, 4, 6]]
>>> matrix_divided(matrix, 2.5)
[[0.0, 1.2, 0.4], [1.2, 1.6, 2.4]]

case of div as 0:
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

case of div as negative value:
>>> matrix_divided(matrix, -2)
[[-0.0, -1.5, -0.5], [-1.5, -2.0, -3.0]]

================= END ==================
